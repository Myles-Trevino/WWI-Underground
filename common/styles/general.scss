/*
	Copyright Myles Trevino
	Licensed under the Apache License, Version 2.0
	http://www.apache.org/licenses/LICENSE-2.0
*/


/* General. */
* {
	-webkit-tap-highlight-color: transparent;
	user-select: none;
	box-sizing: border-box;
	padding: 0;
	margin: 0;
	border: 0;
	outline: none;
}

::selection { background-color: var(--selection-color); }

html, body, #__next { height: 100%; }

html { background-color: var(--background-color); }

a {
	width: fit-content;
	&:hover{ opacity: .5; }
}

p {
	user-select: text;
	text-align: justify;
	height: fit-content;
}

input, textarea, button {
	display: flex;
	align-items: center;
	justify-content: center;
	border-radius: var(--small-radius);
	background-color: transparent;
	border: var(--line-width) solid var(--text-color);
}

input, textarea { padding: .6rem; }

input { height: var(--input-height); }

textarea {
	resize: none;
	height: calc(var(--input-height) * 3);
	scrollbar-width: none;

	&::-webkit-scrollbar{ display: none; }
}

button {
	cursor: pointer;
	height: var(--input-height);
	padding: .5rem .75rem;
	transition: background-color var(--medium-transition-duration);
	min-width: 5.5rem;

	&:hover{ background-color: var(--selection-color); }
}

svg {

	.svg-stroke-glyph {
		fill: transparent;
		stroke: var(--text-color);
	}

	.svg-filled-glyph { fill: var(--text-color); }
}


/* Element classes. */
.centerer {
	display: flex;
	flex-direction: row;
	justify-content: center;
	align-items: center;
	width: 100%;
	height: var(--page-height);
}

.vertical {
	display: grid;
	align-items: center;
	justify-items: center;
	gap: var(--small-gap);
}

.button {
	cursor: pointer;
	display: flex;
	justify-content: center;
	align-items: center;
	transition: background-color var(--medium-transition-duration);

	&:hover{ background-color: var(--hover-color); }
}

.tile {
	padding: var(--small-gap);
	border-radius: var(--medium-radius);
	background-color: var(--tile-color);
}

.input {
	display: grid;
	gap: var(--very-small-gap);
}

.buttonContainer {
	display: grid;
	grid-auto-flow: column;
	grid-gap: var(--small-gap);
	gap: var(--small-gap);
	justify-self: right;
}

.content {
	display: grid;
	gap: var(--small-gap);
	width: 100%;
	max-width: 30rem;
	padding: var(--medium-gap);
}


/* Effects. */
.hidden {
	pointer-events: none;
	opacity: 0;
}

.selectableText { user-select: text; }


/* Animations. */
@keyframes fadeIn {
	from{ opacity: 0; }
	to{ opacity: 1; }
}
